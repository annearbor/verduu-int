{"version":3,"sources":["components/Hompage.jsx","App.js","serviceWorker.js","index.js","components/image/verduu_logo.png"],"names":["Hompage","react_default","a","createElement","Container","fluid","className","src","Logo","alt","width","Jumbotron","Col","size","href","App","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"0PAOe,SAASA,IACtB,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWC,OAAO,EAAMC,UAAU,yBAEhCL,EAAAC,EAAAC,cAAA,OACEG,UAAU,YACVC,IAAKC,IACLC,IAAI,GACJC,MAAM,SAKVT,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAWL,UAAU,YACnBL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,eACfL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,gBAEfL,EAAAC,EAAAC,cAAA,KAAGG,UAAU,QAAb,sBAEAL,EAAAC,EAAAC,cAAA,WAGFF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWC,OAAO,EAAMC,UAAU,yBAChCL,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAKN,UAAU,aAAaO,KAAK,MAAjC,mBAEEZ,EAAAC,EAAAC,cAAA,KAAGG,UAAU,UAAUQ,KAAK,6BAA5B,oBCrBKC,MARf,WACE,OACEd,EAAAC,EAAAC,cAAA,OAAKG,UAAU,OACbL,EAAAC,EAAAC,cAACH,EAAD,QCKcgB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,uECRNC,IAASC,OAAOrB,EAAAC,EAAAC,cAACoB,EAAD,MAASC,SAASC,eAAe,SDuH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,kCEnInBC,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.40908908.chunk.js","sourcesContent":["import React from \"react\";\n// import React, { Component } from \"react\";\nimport { Jumbotron, Col, Container } from \"reactstrap\";\n// import hero from \"../components/image/hero-verduu.jpg\";\nimport Logo from \"../components/image/verduu_logo.png\";\n// import { Link } from \"react-router-dom\";\n\nexport default function Hompage() {\n  return (\n    <div>\n      <Container fluid={true} className=\"text-center mt-6 mb-4\">\n        {/* <Col className=\"header-logo\" size=\"sm\"> */}\n        <img\n          className=\"mb-3 mt-2\"\n          src={Logo}\n          alt=\"\"\n          width=\"200\"\n          // height=\"50\"\n        />\n        {/* </Col> */}\n      </Container>\n      <Jumbotron className=\"bg-white\">\n        <div className=\"logoHolder\" />\n        <div className=\"imageHolder\" />\n        {/* <h1 className=\"display-4\"></h1> */}\n        <p className=\"lead\">Under construction</p>\n        {/* <hr className=\"my-4\" /> */}\n        <p />\n      </Jumbotron>\n      {/* <div className=\"mobileHero\" /> */}\n      <Container fluid={true} className=\"text-center mt-6 mb-4\">\n        <Col className=\"text-muted\" size=\"sm\">\n          Verduu Â© 2019\n          <a className=\"contact\" href=\"mailto:contact@verduu.com\">\n            Contact\n          </a>\n        </Col>\n      </Container>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Homepage from \"./components/Hompage\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Homepage />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\n// import './index.css';\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./custom.scss\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/verduu_logo.bd8ee465.png\";"],"sourceRoot":""}